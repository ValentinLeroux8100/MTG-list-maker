{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\antic\\\\OneDrive\\\\Documents\\\\React\\\\proto-panel\\\\src\\\\PanelContainer.js\";\nimport React from 'react';\nimport PanelElement from './PanelElement';\nimport { Droppable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PanelContainer(data) {\n  return /*#__PURE__*/_jsxDEV(Droppable, {\n    droppableId: \"test\",\n    children: [provider => {\n      /*#__PURE__*/_jsxDEV(\"div\", {\n        ...provider.droppableProps,\n        ref: provider.innerRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this);\n    }, data.data.panelOrder.map(id => {\n      const panelInfo = data.data.panel[id].text;\n      return /*#__PURE__*/_jsxDEV(PanelElement, {\n        children: panelInfo\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 25\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n_c = PanelContainer;\nexport default PanelContainer;\nvar _c;\n$RefreshReg$(_c, \"PanelContainer\");","map":{"version":3,"names":["React","PanelElement","Droppable","jsxDEV","_jsxDEV","PanelContainer","data","droppableId","children","provider","droppableProps","ref","innerRef","fileName","_jsxFileName","lineNumber","columnNumber","panelOrder","map","id","panelInfo","panel","text","_c","$RefreshReg$"],"sources":["C:/Users/antic/OneDrive/Documents/React/proto-panel/src/PanelContainer.js"],"sourcesContent":["import React from 'react'\r\nimport PanelElement from './PanelElement'\r\nimport { Droppable } from 'react-beautiful-dnd';\r\n\r\nfunction PanelContainer(data) {\r\n\r\n    return (\r\n        \r\n        <Droppable droppableId='test'>\r\n            {provider => {\r\n                <div\r\n                    {... provider.droppableProps}\r\n                    ref={provider.innerRef}\r\n                ></div>\r\n            }}\r\n            {data.data.panelOrder.map((id) => {\r\n                const panelInfo = data.data.panel[id].text\r\n                return (<PanelElement key={id}>{panelInfo}</PanelElement>)\r\n            })}\r\n        </Droppable>\r\n    )\r\n}\r\n\r\nexport default PanelContainer"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,SAAS,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,cAAcA,CAACC,IAAI,EAAE;EAE1B,oBAEIF,OAAA,CAACF,SAAS;IAACK,WAAW,EAAC,MAAM;IAAAC,QAAA,GACxBC,QAAQ,IAAI;MACT,aAAAL,OAAA;QAAA,GACSK,QAAQ,CAACC,cAAc;QAC5BC,GAAG,EAAEF,QAAQ,CAACG;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC;IACX,CAAC,EACAV,IAAI,CAACA,IAAI,CAACW,UAAU,CAACC,GAAG,CAAEC,EAAE,IAAK;MAC9B,MAAMC,SAAS,GAAGd,IAAI,CAACA,IAAI,CAACe,KAAK,CAACF,EAAE,CAAC,CAACG,IAAI;MAC1C,oBAAQlB,OAAA,CAACH,YAAY;QAAAO,QAAA,EAAWY;MAAS,GAAdD,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA2B,CAAC;IAC7D,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEpB;AAACO,EAAA,GAjBQlB,cAAc;AAmBvB,eAAeA,cAAc;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}