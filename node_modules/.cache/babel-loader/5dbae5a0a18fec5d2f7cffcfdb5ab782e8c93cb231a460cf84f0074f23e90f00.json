{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\antic\\\\OneDrive\\\\Documents\\\\React\\\\proto-panel\\\\src\\\\index.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { React, useState, useEffect, useRef, forwardRef } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './style.css';\n/*\r\nvar selectedPanel;\r\nvar diffPos;\r\n\r\nfunction MovePanelStart(panel, posX){\r\n    selectedPanel = panel;\r\n    diffPos = posX - panel.current.getClientRects()[0].x\r\n\r\n    selectedPanel.current.style.position = \"absolute\";\r\n    selectedPanel.current.style.left = posX-diffPos+\"px\";\r\n    selectedPanel.current.style.visibility = \"visible\"\r\n\r\n    window.addEventListener('mousemove', MovePanel);\r\n    window.addEventListener('mouseup', MovePanelRelease);\r\n}\r\n\r\nfunction MovePanel(e){\r\n    selectedPanel.current.style.left = e.clientX-diffPos+\"px\";\r\n}\r\n\r\nfunction MovePanelRelease(e){\r\n    selectedPanel.current.style.left = e.clientX-diffPos+\"px\";\r\n    selectedPanel.current.style.position = \"inherit\";\r\n\r\n    window.removeEventListener('mousemove', MovePanel);\r\n    window.removeEventListener('mouseup', MovePanelRelease);\r\n\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Panel(_ref) {\n  _s();\n  let {\n    setText,\n    visibility,\n    copyPanel,\n    children\n  } = _ref;\n  const panel = useRef();\n  function startDrag(e) {\n    //setText((texts) => [... texts, children[1]]);\n    MovePanelStart(copyPanel, e.clientX);\n  }\n}\n_s(Panel, \"OzqP6hEC+T3B6nCPqXjTVDA8LyU=\");\n_c = Panel;\nfunction Principal(_ref2) {\n  _s2();\n  let {\n    copyPanel\n  } = _ref2;\n  const [texts, setText] = useState([\"test 1\", \"test 2\"]);\n  const listPanel = texts.map((text, id) => /*#__PURE__*/_jsxDEV(Panel, {\n    setText: setText,\n    copyPanel: copyPanel,\n    children: [\" \", text]\n  }, id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: listPanel\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s2(Principal, \"AhvPYZo4iMowgO2ViTI6sJOMCqQ=\");\n_c2 = Principal;\nfunction App() {\n  const CopyPanel = /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(Panel, {\n    ref: ref,\n    visibility: \"hidden\",\n    children: [\" \", props.children, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Principal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CopyPanel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_c3 = App;\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 71,\n  columnNumber: 13\n}, this));\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Panel\");\n$RefreshReg$(_c2, \"Principal\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","forwardRef","ReactDOM","jsxDEV","_jsxDEV","Fragment","_Fragment","Panel","_ref","_s","setText","visibility","copyPanel","children","panel","startDrag","e","MovePanelStart","clientX","_c","Principal","_ref2","_s2","texts","listPanel","map","text","id","fileName","_jsxFileName","lineNumber","columnNumber","_c2","App","CopyPanel","props","ref","_c3","root","createRoot","document","getElementById","render","$RefreshReg$"],"sources":["C:/Users/antic/OneDrive/Documents/React/proto-panel/src/index.js"],"sourcesContent":["import {React, useState, useEffect, useRef, forwardRef} from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './style.css'\r\n/*\r\nvar selectedPanel;\r\nvar diffPos;\r\n\r\nfunction MovePanelStart(panel, posX){\r\n    selectedPanel = panel;\r\n    diffPos = posX - panel.current.getClientRects()[0].x\r\n\r\n    selectedPanel.current.style.position = \"absolute\";\r\n    selectedPanel.current.style.left = posX-diffPos+\"px\";\r\n    selectedPanel.current.style.visibility = \"visible\"\r\n\r\n    window.addEventListener('mousemove', MovePanel);\r\n    window.addEventListener('mouseup', MovePanelRelease);\r\n}\r\n\r\nfunction MovePanel(e){\r\n    selectedPanel.current.style.left = e.clientX-diffPos+\"px\";\r\n}\r\n\r\nfunction MovePanelRelease(e){\r\n    selectedPanel.current.style.left = e.clientX-diffPos+\"px\";\r\n    selectedPanel.current.style.position = \"inherit\";\r\n\r\n    window.removeEventListener('mousemove', MovePanel);\r\n    window.removeEventListener('mouseup', MovePanelRelease);\r\n\r\n*/\r\n\r\nfunction Panel({setText, visibility, copyPanel, children}){\r\n    const panel = useRef();\r\n\r\n    function startDrag(e){\r\n        //setText((texts) => [... texts, children[1]]);\r\n        MovePanelStart(copyPanel, e.clientX);\r\n    }\r\n    \r\n}\r\n\r\nfunction Principal({copyPanel}){\r\n    const [texts, setText] = useState([\"test 1\", \"test 2\"]);\r\n\r\n    const listPanel = (texts.map((text, id) =>\r\n        <Panel key={id} setText={setText} copyPanel={copyPanel}> {text}</Panel>\r\n    ));\r\n    \r\n    return(\r\n        <main>\r\n            {listPanel}\r\n        </main>\r\n    )\r\n }\r\n\r\nfunction App(){\r\n    const CopyPanel = forwardRef((props, ref) => (\r\n        <Panel ref={ref} visibility={\"hidden\"}> {props.children} </Panel>\r\n    ))\r\n\r\n    return(\r\n        <>\r\n            <Principal></Principal>\r\n            <CopyPanel></CopyPanel>\r\n        </>\r\n    )\r\n}\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(<App></App>);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}