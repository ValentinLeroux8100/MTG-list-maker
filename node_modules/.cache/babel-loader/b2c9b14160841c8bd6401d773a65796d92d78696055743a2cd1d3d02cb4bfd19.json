{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\antic\\\\OneDrive\\\\Documents\\\\React\\\\proto-panel\\\\src\\\\index.js\",\n  _s = $RefreshSig$();\nimport { React, useState } from 'react';\nimport PanelContainer from './PanelContainer';\nimport ReactDOM from 'react-dom/client';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport './style.css';\n/*\r\nvar selectedPanel;\r\nvar diffPos;\r\n\r\nfunction MovePanelStart(panel, posX){\r\n    selectedPanel = panel;\r\n    diffPos = posX - panel.current.getClientRects()[0].x\r\n\r\n    selectedPanel.current.style.position = \"absolute\";\r\n    selectedPanel.current.style.left = posX-diffPos+\"px\";\r\n    selectedPanel.current.style.visibility = \"visible\"\r\n\r\n    window.addEventListener('mousemove', MovePanel);\r\n    window.addEventListener('mouseup', MovePanelRelease);\r\n}\r\n\r\nfunction MovePanel(e){\r\n    selectedPanel.current.style.left = e.clientX-diffPos+\"px\";\r\n}\r\n\r\nfunction MovePanelRelease(e){\r\n    selectedPanel.current.style.left = e.clientX-diffPos+\"px\";\r\n    selectedPanel.current.style.position = \"inherit\";\r\n\r\n    window.removeEventListener('mousemove', MovePanel);\r\n    window.removeEventListener('mouseup', MovePanelRelease);\r\n\r\n}\r\n\r\nfunction Panel({setText, visibility, copyPanel, children}){\r\n    const panel = useRef();\r\n\r\n    function startDrag(e){\r\n        //setText((texts) => [... texts, children[1]]);\r\n        MovePanelStart(copyPanel, e.clientX);\r\n    }\r\n    \r\n}\r\n\r\nfunction Principal({copyPanel}){\r\n    const [texts, setText] = useState([\"test 1\", \"test 2\"]);\r\n\r\n    const listPanel = (texts.map((text, id) =>\r\n        <Panel key={id} setText={setText} copyPanel={copyPanel}> {text}</Panel>\r\n    ));\r\n    \r\n    return(\r\n        <main>\r\n            {listPanel}\r\n        </main>\r\n    )\r\n }\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState({\n    \"panel\": {\n      \"panel-1\": {\n        id: \"panel-1\",\n        text: \"text 1\"\n      },\n      \"panel-2\": {\n        id: \"panel-2\",\n        text: \"text 2\"\n      }\n    },\n    \"panelOrder\": [\"panel-2\", \"panel-1\"]\n  });\n  const onDragEnd = result => {\n    const {\n      destination,\n      source,\n      draggableId\n    } = result;\n    if (!destination) {\n      return;\n    }\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    }\n    const newOrder = Array.from(data.panelOrder);\n    newOrder.splice(source.index, 1);\n    newOrder.splice(destination.index, 0, draggableId);\n    setData(prevData => ({\n      ...prevData,\n      panelOrder: newOrder\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(PanelContainer, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"7rC9ecW5wFRUD7Q8dZ4OA8Zsrwc=\");\n_c = App;\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 95,\n  columnNumber: 13\n}, this));\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","PanelContainer","ReactDOM","DragDropContext","jsxDEV","_jsxDEV","App","_s","data","setData","id","text","onDragEnd","result","destination","source","draggableId","droppableId","index","newOrder","Array","from","panelOrder","splice","prevData","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","root","createRoot","document","getElementById","render","$RefreshReg$"],"sources":["C:/Users/antic/OneDrive/Documents/React/proto-panel/src/index.js"],"sourcesContent":["import {React, useState} from 'react';\r\nimport PanelContainer from './PanelContainer';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { DragDropContext } from 'react-beautiful-dnd'\r\nimport './style.css'\r\n/*\r\nvar selectedPanel;\r\nvar diffPos;\r\n\r\nfunction MovePanelStart(panel, posX){\r\n    selectedPanel = panel;\r\n    diffPos = posX - panel.current.getClientRects()[0].x\r\n\r\n    selectedPanel.current.style.position = \"absolute\";\r\n    selectedPanel.current.style.left = posX-diffPos+\"px\";\r\n    selectedPanel.current.style.visibility = \"visible\"\r\n\r\n    window.addEventListener('mousemove', MovePanel);\r\n    window.addEventListener('mouseup', MovePanelRelease);\r\n}\r\n\r\nfunction MovePanel(e){\r\n    selectedPanel.current.style.left = e.clientX-diffPos+\"px\";\r\n}\r\n\r\nfunction MovePanelRelease(e){\r\n    selectedPanel.current.style.left = e.clientX-diffPos+\"px\";\r\n    selectedPanel.current.style.position = \"inherit\";\r\n\r\n    window.removeEventListener('mousemove', MovePanel);\r\n    window.removeEventListener('mouseup', MovePanelRelease);\r\n\r\n}\r\n\r\nfunction Panel({setText, visibility, copyPanel, children}){\r\n    const panel = useRef();\r\n\r\n    function startDrag(e){\r\n        //setText((texts) => [... texts, children[1]]);\r\n        MovePanelStart(copyPanel, e.clientX);\r\n    }\r\n    \r\n}\r\n\r\nfunction Principal({copyPanel}){\r\n    const [texts, setText] = useState([\"test 1\", \"test 2\"]);\r\n\r\n    const listPanel = (texts.map((text, id) =>\r\n        <Panel key={id} setText={setText} copyPanel={copyPanel}> {text}</Panel>\r\n    ));\r\n    \r\n    return(\r\n        <main>\r\n            {listPanel}\r\n        </main>\r\n    )\r\n }\r\n*/\r\n\r\nfunction App(){\r\n    const [data, setData] = useState({ \r\n        \"panel\" : {\r\n            \"panel-1\" : {id: \"panel-1\", text: \"text 1\"}, \r\n            \"panel-2\" : {id: \"panel-2\", text: \"text 2\"},\r\n        },\r\n        \"panelOrder\" : [\"panel-2\", \"panel-1\"]\r\n    })\r\n\r\n    const onDragEnd = result =>{\r\n        const {destination, source, draggableId} = result;\r\n\r\n        if(!destination){ return } \r\n\r\n        if(destination.droppableId === source.droppableId \r\n        && destination.index === source.index) {return}\r\n\r\n        const newOrder = Array.from(data.panelOrder)\r\n\r\n        newOrder.splice(source.index, 1)\r\n        newOrder.splice(destination.index, 0, draggableId)\r\n        \r\n        setData((prevData) => ({...prevData, panelOrder: newOrder}))\r\n    }\r\n\r\n    return(\r\n        <main>\r\n            <DragDropContext onDragEnd={onDragEnd}>\r\n                <PanelContainer data={data}/>\r\n            </DragDropContext>\r\n        </main>\r\n    )\r\n}\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(<App></App>);"],"mappings":";;AAAA,SAAQA,KAAK,EAAEC,QAAQ,QAAO,OAAO;AACrC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,SAASC,eAAe,QAAQ,qBAAqB;AACrD,OAAO,aAAa;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApDA,SAAAC,MAAA,IAAAC,OAAA;AAsDA,SAASC,GAAGA,CAAA,EAAE;EAAAC,EAAA;EACV,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC;IAC7B,OAAO,EAAG;MACN,SAAS,EAAG;QAACU,EAAE,EAAE,SAAS;QAAEC,IAAI,EAAE;MAAQ,CAAC;MAC3C,SAAS,EAAG;QAACD,EAAE,EAAE,SAAS;QAAEC,IAAI,EAAE;MAAQ;IAC9C,CAAC;IACD,YAAY,EAAG,CAAC,SAAS,EAAE,SAAS;EACxC,CAAC,CAAC;EAEF,MAAMC,SAAS,GAAGC,MAAM,IAAG;IACvB,MAAM;MAACC,WAAW;MAAEC,MAAM;MAAEC;IAAW,CAAC,GAAGH,MAAM;IAEjD,IAAG,CAACC,WAAW,EAAC;MAAE;IAAO;IAEzB,IAAGA,WAAW,CAACG,WAAW,KAAKF,MAAM,CAACE,WAAW,IAC9CH,WAAW,CAACI,KAAK,KAAKH,MAAM,CAACG,KAAK,EAAE;MAAC;IAAM;IAE9C,MAAMC,QAAQ,GAAGC,KAAK,CAACC,IAAI,CAACb,IAAI,CAACc,UAAU,CAAC;IAE5CH,QAAQ,CAACI,MAAM,CAACR,MAAM,CAACG,KAAK,EAAE,CAAC,CAAC;IAChCC,QAAQ,CAACI,MAAM,CAACT,WAAW,CAACI,KAAK,EAAE,CAAC,EAAEF,WAAW,CAAC;IAElDP,OAAO,CAAEe,QAAQ,KAAM;MAAC,GAAGA,QAAQ;MAAEF,UAAU,EAAEH;IAAQ,CAAC,CAAC,CAAC;EAChE,CAAC;EAED,oBACId,OAAA;IAAAoB,QAAA,eACIpB,OAAA,CAACF,eAAe;MAACS,SAAS,EAAEA,SAAU;MAAAa,QAAA,eAClCpB,OAAA,CAACJ,cAAc;QAACO,IAAI,EAAEA;MAAK;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEf;AAACtB,EAAA,CAhCQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAkCZ,MAAMyB,IAAI,GAAG7B,QAAQ,CAAC8B,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eAAC9B,OAAA,CAACC,GAAG;EAAAoB,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAM,CAAC,CAAC;AAAC,IAAAC,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}